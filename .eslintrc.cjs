const restrictedGlobals = require('confusing-browser-globals');

module.exports = {
  env: { browser: true, es2021: true, node: true },
  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },
  settings: { react: { version: 'detect' } },
  extends: ['plugin:react/jsx-runtime'],
  plugins: ['import', 'react', 'react-hooks', 'prettier'],
  rules: {
    // http://eslint.org/docs/rules/
    // Possible Problems
    'array-callback-return': 'warn',
    'getter-return': 'warn',
    'no-cond-assign': ['warn', 'except-parens'],
    'no-const-assign': 'warn',
    'no-control-regex': 'warn',
    'no-dupe-args': 'warn',
    'no-dupe-class-members': 'warn',
    'no-dupe-keys': 'warn',
    'no-duplicate-case': 'warn',
    'no-duplicate-imports': 'warn',
    'no-empty-character-class': 'warn',
    'no-empty-pattern': 'warn',
    'no-ex-assign': 'warn',
    'no-fallthrough': 'warn',
    'no-func-assign': 'warn',
    'no-invalid-regexp': 'warn',
    'no-new-symbol': 'warn',
    'no-obj-calls': 'warn',
    'no-self-assign': 'warn',
    'no-self-compare': 'warn',
    'no-sparse-arrays': 'warn',
    'no-template-curly-in-string': 'warn',
    'no-this-before-super': 'warn',
    'no-undef': 'error',
    'no-unreachable': 'warn',
    'no-unsafe-negation': 'warn',
    'no-unused-vars': [
      'warn',
      { args: 'after-used', ignoreRestSiblings: true },
    ],
    'no-use-before-define': [
      'warn',
      { functions: false, classes: false, variables: false },
    ],
    'use-isnan': 'warn',
    'valid-typeof': 'warn',

    // Suggestions
    curly: 'warn',
    'default-case': ['warn', { commentPattern: '^no default$' }],
    'default-param-last': 'warn',
    'dot-notation': 'warn',
    eqeqeq: ['warn', 'always'],
    'no-array-constructor': 'warn',
    'no-caller': 'warn',
    'no-debugger': 'error',
    'no-delete-var': 'warn',
    'no-else-return': ['warn', { allowElseIf: false }],
    'no-empty': ['error', { allowEmptyCatch: true }],
    'no-eval': 'warn',
    'no-extend-native': 'warn',
    'no-extra-bind': 'warn',
    'no-extra-boolean-cast': ['warn', { enforceForLogicalOperands: true }],
    'no-extra-label': 'warn',
    'no-global-assign': 'warn',
    'no-implicit-coercion': ['warn', { disallowTemplateShorthand: true }],
    'no-implied-eval': 'warn',
    'no-iterator': 'warn',
    'no-labels': 'warn',
    'no-lone-blocks': 'warn',
    'no-lonely-if': 'warn',
    'no-loop-func': 'warn',
    'no-mixed-operators': [
      'warn',
      {
        groups: [
          ['&', '|', '^', '~', '<<', '>>', '>>>'],
          ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
          ['&&', '||'],
          ['in', 'instanceof'],
        ],
        allowSamePrecedence: false,
      },
    ],
    'no-multi-str': 'warn',
    'no-new-func': 'warn',
    'no-new-object': 'warn',
    'no-new-wrappers': 'warn',
    'no-octal': 'warn',
    'no-octal-escape': 'warn',
    'no-redeclare': 'warn',
    'no-regex-spaces': 'warn',
    'no-restricted-globals': ['error'].concat(restrictedGlobals),
    'no-script-url': 'error',
    'no-sequences': 'warn',
    'no-shadow-restricted-names': 'warn',
    'no-throw-literal': 'warn',
    'no-undef-init': 'warn',
    'no-unneeded-ternary': 'warn',
    'no-unused-expressions': [
      'error',
      {
        allowShortCircuit: true,
        allowTernary: true,
        allowTaggedTemplates: true,
        enforceForJSX: true,
      },
    ],
    'no-useless-catch': 'warn',
    'no-useless-computed-key': 'warn',
    'no-useless-concat': 'warn',
    'no-useless-constructor': 'warn',
    'no-useless-escape': 'warn',
    'no-useless-rename': 'warn',
    'no-useless-return': 'warn',
    'no-var': 'warn',
    'no-with': 'error',
    'object-shorthand': 'warn',
    'operator-assignment': 'warn',
    'prefer-const': 'warn',
    'prefer-destructuring': [
      'warn',
      {
        VariableDeclarator: { array: true, object: true },
        AssignmentExpression: { array: true, object: false },
      },
    ],
    'prefer-rest-params': 'warn',
    'prefer-template': 'warn',
    'require-await': 'warn',
    'require-yield': 'warn',
    strict: ['warn', 'never'],

    // // https://github.com/import-js/eslint-plugin-import/tree/main/docs/rules
    'import/first': 'warn',
    'import/no-amd': 'error',
    'import/no-webpack-loader-syntax': 'error',

    // https://github.com/yannickcr/eslint-plugin-react/tree/master/docs/rules
    'react/display-name': 'warn',
    'react/jsx-curly-brace-presence': [
      'warn',
      { props: 'never', children: 'never' },
    ],
    'react/jsx-no-comment-textnodes': 'warn',
    'react/jsx-no-duplicate-props': 'warn',
    'react/jsx-no-target-blank': 'warn',
    'react/jsx-no-undef': 'error',
    'react/jsx-pascal-case': ['warn', { allowNamespace: true }],
    'react/jsx-uses-vars': 'warn',
    'react/no-children-prop': 'warn',
    'react/no-danger-with-children': 'warn',
    'react/no-direct-mutation-state': 'warn',
    'react/no-find-dom-node': 'warn',
    'react/no-string-refs': 'warn',
    'react/no-typos': 'error',
    'react/no-unescaped-entities': [
      'warn',
      {
        forbid: [
          { char: '<', alternatives: ['&lt;'] },
          { char: '>', alternatives: ['&gt;'] },
          { char: '{', alternatives: ['&#123;'] },
          { char: '}', alternatives: ['&#125;'] },
          { char: 'Â·', alternatives: ['&middot;'] },
        ],
      },
    ],
    'react/require-render-return': 'error',
    'react/self-closing-comp': ['warn', { component: true, html: true }],
    'react/style-prop-object': 'warn',

    // https://github.com/facebook/react/tree/main/packages/eslint-plugin-react-hooks
    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'warn',

    // https://github.com/prettier/eslint-plugin-prettier
    'prettier/prettier': 'warn',
  },
};
